setwd("~/Disk Google/Repositories/CERGE-Introduction-to-Machine-Learning/Lecture 1")
install("dplyr")
install.packages("dplyr")
library(dplyr)
library(ggplot2)
df <- read.csv("./data/orders.csv")
head(df)
tail(df)
df$Date <- as.Date(df$Date, format = "%m/%d/%Y")
summary(df)
df$Date <- as.Date(df$Date, format = "%m/%d/%Y")
summary(df)
summary(df)
df %>% select(Customer.ID, Country) %>% head
df %>% filter(Customer.ID=="7")
df %>%
group_by(Customer.ID) %>%
summarise(Monetary = sum(Subtotal))  %>%
head
df %>%
group_by(Customer.ID) %>%
summarise(Frequency = n()) %>% #count number of rows
head
rfm = df %>%
group_by(Customer.ID) %>%
summarise(last_purchase = max(Date),
recency = as.double(difftime("2016-01-01",
as.Date(last_purchase,
origin = "1970-01-01"),
units = "days"
)),
frequency = n(),
monetary = sum(Subtotal))
rfm
View(rfm)
head(rfm)
ggplot(rfm, aes(x= recency, y=frequency, size=monetary)) + geom_point()
ggplot(rfm, aes(x= recency,
y= frequency,
size=monetary,
color = monetary)) + geom_point()
rfm %>% ggplot(aes(x=recency, y=monetary)) + geom_point(position = "jitter")+theme_bw()
df %>%
group_by(Customer.ID) %>%
summarise(Monetary = sum(Subtotal))  %>%
head
df %>%
group_by(Country)
df %>%
group_by(Customer.ID) %>%
summarise(Frequency = n()) %>% #count number of rows
head
df %>%
group_by(Customer.ID) %>%
summarise(Monetary = sum(Subtotal))  %>%
head
df %>%
group_by(Country) %>%
summarise(Monetary = sum(Subtotal))  %>%
head
df %>%
group_by(Country) %>%
summarise(Monetary = sum(Subtotal))  %>%
max
country = df %>%
group_by(Country) %>%
summarise(Monetary = sum(Subtotal))  %>%
head
max(country)
max(country$Monetary)
max(country$Monetary)
region = df %>%
group_by(State) %>%
summarise(Monetary = sum(Subtotal))
View(region)
country==max(country$Monetary)
print(country==max(country$Monetary))
print(country==max(country$Monetary))
df %>%
group_by(Country) %>%
summarise(max_pch = max(Subtotal)) %>%
arrange(desc(max_pch)) %>%
head
df %>%
group_by(Country) %>%
summarise(max_pch = sum(Subtotal)) %>%
arrange(desc(max_pch)) %>%
head
df %>%
group_by(Country) %>%
summarise(max_pch = max(Subtotal)) %>%
arrange(desc(max_pch)) %>%
head
df %>%
group_by(Country) %>%
summarise(n()) %>%
arrange(desc(max_pch)) %>%
head
df %>%
group_by(Country) %>%
summarise(max_pch = n()) %>%
arrange(desc(max_pch)) %>%
head
setwd("~/Disk Google/Repositories/kiwi")
rm(list=ls())
setwd("~/Disk Google/Repositories/kiwi")
getwd()
df <- read.csv("data_200.csv")
df <- read.csv("data_200.txt")
df <- read.csv("data_15.txt")
str(df)
df
library(dplyr)
library(stringr)
install.packages("dplyr")
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
df <- read.csv("./data/orders.csv")
# Check everything loaded correctly
head(df)
tail(df)
summary(df)
df$Date <- as.Date(df$Date, format = "%m/%d/%Y")
# select
df %>% select(Customer.ID, Country) %>% head
df %>% filter(Customer.ID=='7', Subtotal > 0.4)
df %>% slice(3:5) %>% select(Country)
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
library(dplyr)
library(stringr)
rm(list=ls())
setwd("~/Disk Google/Repositories/CERGE-Introduction-to-Machine-Learning/Lecture 2")
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
df <- read.csv("./data/out.c-pa.orders_refine.csv", encoding = "UTF-8")
head(df)
df <- read.csv("./data/out.c-pa.orders_refine.csv", encoding = "UTF-8")
df <- read.csv("./data/orders.csv", encoding = "UTF-8")
head(df)
df$DATE_UPDATED <- as.Date(df$DATE_UPDATED)
source('~/Disk Google/Repositories/CERGE-Introduction-to-Machine-Learning/Lecture 2/001_rfm_segmentation.R', echo=TRUE)
install.packages("stringr")
rm(list=ls())
setwd("~/Disk Google/Repositories/CERGE-Introduction-to-Machine-Learning/Lecture 1")
getwd()
df <- read.csv("./data/orders.csv")
df$Date <- as.Date(df$Date, format = "%m/%d/%Y")
max(df$Date) #Check the latest date
ref_date <- as.Date("2016-05-18")
rfm <- df %>%
group_by(Customer.ID) %>%
summarise(
Recency = as.integer(difftime(ref_date,max(Date), units = "days")),
Frequency = n(),
Monetary = sum(Subtotal)
end
rfm <- df %>%
group_by(Customer.ID) %>%
summarise(
Recency = as.integer(difftime(ref_date,max(Date), units = "days")),
Frequency = n(),
Monetary = sum(Subtotal))
hist(rfm$Frequency)
hist(rfm$Monetary)
hist(rfm$Frequency)
table(rfm$Recency)
table(rfm$Monetary)
hist(rfm$Frequency, breaks = 5)
rfm$freq_bin <- sapply(rfm$Frequency, function(x){ifelse(x<10, "H", "L")})
rfm$freq_bin <- sapply(rfm$Frequency, function(x){ifelse(x>10, "H", "L")})
View(rfm)
rfm$freq_bin <- sapply(rfm$Frequency, function(x){ifelse(x>10, "H", ifelse(x>4, "M", "L"))})
rfm$freq_bin <- sapply(rfm$Frequency, function(x){ifelse(x>10, "H", ifelse(x>4, "M", "L"))})
rfm <- na.omit(rfm)
data <- rfm %>% select(rec_bin, freq_bin, mon_bin)
rfm$rec_bin <- sapply(rfm$Recency, function(x){ifelse(x<50,1,ifelse(x<100,2,3))})
rfm$freq_bin <- sapply(rfm$Frequency, function(x){ifelse(x<1,1,ifelse(x<5,2,3))})
rfm$mon_bin <- sapply(rfm$Monetary, function(x){ifelse(x<300,1,ifelse(x<1000,2,3))})
rfm <- na.omit(rfm)
data <- rfm %>% select(rec_bin, freq_bin, mon_bin)
kmax <- 15
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
View(data)
rfm$rec_bin <- sapply(rfm$Recency, function(x){ifelse(x<50,1,ifelse(x<100,2,3))})
rfm$freq_bin <- sapply(rfm$Frequency, function(x){ifelse(x<1,1,ifelse(x<5,2,3))})
rfm$mon_bin <- sapply(rfm$Monetary, function(x){ifelse(x<300,1,ifelse(x<1000,2,3))})
hist(rfm$Frequency)
hist(rfm$Monetary)
hist(rfm$Recency)
rfm$rec_bin <- sapply(rfm$Recency, function(x){ifelse(x<50,1,ifelse(x<100,2,3))})
rfm$freq_bin <- sapply(rfm$Frequency, function(x){ifelse(x<1,1,ifelse(x<5,2,3))})
rfm$mon_bin <- sapply(rfm$Monetary, function(x){ifelse(x<300,1,ifelse(x<1000,2,3))})
rfm$freq_bin <- sapply(rfm$Frequency, function(x){ifelse(x>10, "H", ifelse(x>4, "M", "L"))})
rfm$rec_bin <- sapply(rfm$Recency, function(x){ifelse(x<10,1,ifelse(x<20,2,3))})
rfm$freq_bin <- sapply(rfm$Frequency, function(x){ifelse(x>10,1,ifelse(x>4,2,3))})
rfm$mon_bin <- sapply(rfm$Monetary, function(x){ifelse(x<10,1,ifelse(x<50,2,3))})
rfm <- na.omit(rfm)
data <- rfm %>% select(rec_bin, freq_bin, mon_bin)
View(data)
View(rfm)
rfm$rec_bin <- sapply(rfm$Recency, function(x){ifelse(x<1000,1,ifelse(x<2000,2,3))})
rfm$freq_bin <- sapply(rfm$Frequency, function(x){ifelse(x>10,1,ifelse(x>4,2,3))})
rfm$mon_bin <- sapply(rfm$Monetary, function(x){ifelse(x<50,1,ifelse(x<100,2,3))})
rfm <- na.omit(rfm)
data <- rfm %>% select(rec_bin, freq_bin, mon_bin)
kmax <- 15
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
kmax <- 10
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
kmax <- 15
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
km <- kmeans(data,8)
rfm$cluster <- km$cluster
################################################
##  Step 4: Interprete cluster                #
##############################################
m_rec <- mean(rfm$Recency)
m_freq <- mean(rfm$Frequency)
m_mon <- mean(rfm$Monetary)
output <- rfm %>%
group_by(cluster) %>%
summarise(avg_rec = mean(Recency),
avg_freq = mean(Frequency),
avg_mon = mean(Monetary)) %>%
mutate(label = str_c(ifelse(avg_rec>m_rec, "H","L"),
ifelse(avg_freq>m_freq, "H","L"),
ifelse(avg_mon>m_mon, "H","L")
))
output
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.withinss})
plot(1:kmax, tot.withinss, type = "l")
tot.withinss <- sapply(1:kmax, function(k){kmeans(data,k)$tot.w
.
0
quit()
end
)
kmeans(data, 4)
kmeans(data, 4)$centers
rm(list=ls())
rm(list=ls())
setwd("~/Disk Google/Repositories/CERGE-Introduction-to-Machine-Learning/Lecture 3")
getwd()
